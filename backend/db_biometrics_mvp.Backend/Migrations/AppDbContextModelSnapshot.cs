// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using db_biometrics_mvp.Backend.Data;

#nullable disable

namespace db_biometrics_mvp.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("db_biometrics_mvp.Backend.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alerts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Message = "Failed login attempt for 'baduser'",
                            Severity = "Medium",
                            Status = "Active",
                            Timestamp = new DateTime(2025, 8, 23, 16, 55, 0, 0, DateTimeKind.Utc),
                            Type = "Security"
                        },
                        new
                        {
                            Id = 2,
                            Message = "High CPU usage detected on primary DB server",
                            Severity = "Low",
                            Status = "Active",
                            Timestamp = new DateTime(2025, 8, 23, 16, 40, 0, 0, DateTimeKind.Utc),
                            Type = "Performance"
                        });
                });

            modelBuilder.Entity("db_biometrics_mvp.Backend.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "DB_INIT",
                            Details = "Initial database migration completed.",
                            IpAddress = "127.0.0.1",
                            Timestamp = new DateTime(2025, 8, 23, 17, 0, 0, 0, DateTimeKind.Utc),
                            Username = "system"
                        });
                });

            modelBuilder.Entity("db_biometrics_mvp.Backend.Models.DbConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackupSchedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableAuditing")
                        .HasColumnType("bit");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxConnections")
                        .HasColumnType("int");

                    b.Property<int>("QueryTimeoutSeconds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DbConfigurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackupSchedule = "Daily 02:00 AM",
                            EnableAuditing = true,
                            LogLevel = "INFO",
                            MaxConnections = 100,
                            QueryTimeoutSeconds = 30
                        });
                });

            modelBuilder.Entity("db_biometrics_mvp.Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            PasswordHash = "713bfda78870bf9d1b261f565286f85e97ee614efe5f0faf7c34e7ca4f65baca",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            PasswordHash = "9af50a3ade35be3c6d8ef3ecf3cbedf85c141d0e550c9f1a3fa3e67b6ab55804",
                            Role = "dba",
                            Username = "dbauser"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            PasswordHash = "9af50a3ade35be3c6d8ef3ecf3cbedf85c141d0e550c9f1a3fa3e67b6ab55804",
                            Role = "user",
                            Username = "testuser"
                        });
                });

            modelBuilder.Entity("db_biometrics_mvp.Backend.Models.WebsiteContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WebsiteContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "# Welcome to DBA Admin Console\n\nThis is a placeholder for website content."
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
